$("#query").on('input',function(){
    // set query
    let query = $("#query").val().toLowerCase();
    // change the link
    $("#home-link").attr('href', `/q/${query}`);
})

$(document).ready(function (e) {
        "use strict";
        e(".menu-toggle").click(function (a) {
            a.preventDefault(), e("#sidebar-wrapper").toggleClass("active"), e(".menu-toggle > .fa-bars, .menu-toggle > .fa-times").toggleClass("fa-bars fa-times"), e(this).toggleClass("active");
        }),
            e('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function () {
                if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) {
                    var a = e(this.hash);
                    if ((a = a.length ? a : e("[name=" + this.hash.slice(1) + "]")).length) return e("html, body").animate({ scrollTop: a.offset().top }, 1e3, "easeInOutExpo"), !1;
                }
            }),
            e("#sidebar-wrapper .js-scroll-trigger").click(function () {
                e("#sidebar-wrapper").removeClass("active"), e(".menu-toggle").removeClass("active"), e(".menu-toggle > .fa-bars, .menu-toggle > .fa-times").toggleClass("fa-bars fa-times");
            }),
            e(document).scroll(function () {
                e(this).scrollTop() > 100 ? e(".scroll-to-top").fadeIn() : e(".scroll-to-top").fadeOut();
            });
    });
var onMapMouseleaveHandler = function (e) {
        var a = $(this);
        a.on("click", onMapClickHandler), a.off("mouseleave", onMapMouseleaveHandler), a.find("iframe").css("pointer-events", "none");
    },
    onMapClickHandler = function (e) {
        var a = $(this);
        a.off("click", onMapClickHandler), a.find("iframe").css("pointer-events", "auto"), a.on("mouseleave", onMapMouseleaveHandler);
    };
$(".map").on("click", onMapClickHandler);


const URL = window.location.href;
var section;
if (URL.indexOf("/icon/") !== -1){section = "icon";}
else if (URL.indexOf("/video/") !== -1){section = "video";}
else if (URL.indexOf("/image/") !== -1){section = "image";}
else if (URL.indexOf("/vector/") !== -1){section = "vector";}
else{ section = false}

if (section !== false){

    $(window).on('load', function () {
        // getting the saved value
        var obj = JSON.parse(localStorage.getItem(section));
        
        // foreach apply the liked action
        var lst = []
        if (obj === null) {
            return lst
        }
        obj.forEach(o => {
            var sitename = o.sitename;
            var liked = o.liked;
            var target = document.querySelector(`[data-site="${sitename}"]`);
            target.dataset.liked = liked;
            
            let L = {};
            L.sitename = sitename;
            L.liked = target.dataset.liked;
            L.section = target.dataset.section;
            
            start = document.getElementById("sitelist")
            if (L.liked === "true") {
                start.prepend(target)
            }
            if (L.liked === "false") {
                start.append(target)
            }
            lst.push(L)
            
        });
        
        return lst
    })
    
    function like(el, e, status) {
        
        e.preventDefault()
        
        var lst = JSON.parse(localStorage.getItem(section));
        
        if (lst === null) {
            lst = []
        }
        console.table(lst)
        var target = el.parentElement.parentElement;
        var sitename = target.dataset.site;
        var liked = target.dataset.liked;
        console.log(liked)
        
        var found = false
        lst.forEach((l) => {
            if (l.sitename == sitename) {
                found = true
            }
        })
        
        if (liked !== status) {
            target.dataset.liked = status;
            let L = {};
            L.sitename = sitename;
            L.liked = target.dataset.liked;
            L.section = target.dataset.section;
            
            var lst = arrayRemove(lst, L);
            localStorage.setItem(section, JSON.stringify(lst));
        }
        if (liked == status) {
            target.dataset.liked = "none";
        }
        
        if (found !== true) {
            
            let L = {};
            L.sitename = sitename;
            L.liked = target.dataset.liked;
            L.section = target.dataset.section;
            
            lst.push(L);
            localStorage.setItem(section, JSON.stringify(lst));
        }
        
        start = document.getElementById("sitelist")
        
        if (status == "true") {
            start.prepend(target);
        }
        if (status == "false") {
            start.append(target);
        }
        
    }
    
}
    
    
function arrayRemove(arr, value) { 
    
    return arr.filter(function(ele){ 
        return ele != value; 
    });
}